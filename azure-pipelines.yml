# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default

steps:
- script: echo Hello, world! $(Agent.TempDirectory)
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: rm -rf /home/killar/.sonar/cache
  displayName: 'Clear SonarQube Cache'

- task: SonarQubePrepare@7
  inputs:
    SonarQube: 'SonarQube-Linode'
    scannerMode: 'cli'
    configMode: 'manual'
    cliProjectKey: 'Python-CICD_Python-CICD_cc16046b-be76-48e7-ac17-5c12a13520e7'
    cliProjectName: 'Python-CICD'
    cliSources: '.'
    extraProperties: |
      sonar.sourceEncoding=UTF-8
      sonar.branch.name=$(Build.SourceBranchName)
      sonar.scanner.skipSystemTruststore=true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

- task: SonarQubeAnalyze@7
  env:
    SONAR_SCANNER_OPTS: "-Dsonar.log.level=DEBUG"  # Enable detailed logs
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarQubePublish@7
  inputs:
    pollingTimeoutSec: '100'